import{_ as o,e as t,o as a,c as n,h as r,i}from"./app.47a1a573.js";const m=JSON.parse('{"title":"What is vendor lock-in?","description":"","frontmatter":{},"headers":[{"level":2,"title":"How to Keep Control of Your Data and Infrastructure","slug":"how-to-keep-control-of-your-data-and-infrastructure","link":"#how-to-keep-control-of-your-data-and-infrastructure","children":[]}],"relativePath":"blog/posts/example2.md"}'),s={name:"blog/posts/example2.md"},c=i('<h1 id="what-is-vendor-lock-in" tabindex="-1">What is vendor lock-in? <a class="header-anchor" href="#what-is-vendor-lock-in" aria-hidden="true">#</a></h1><p>According to Wikipedia, \u201Cvendor lock-in, also known as proprietary lock-in or customer lock-in, makes a customer dependent on a vendor for products, unable to use another vendor without substantial switching costs. Vendor lock-in is prevalent with proprietary software, where vendors make users sweat over leaving the platform to adopt a new one. This essentially defeats the purpose of having a future-proof tech stack.</p><p>Besides, you still have to factor in the potential increase in usage or license cost for these proprietary solutions. In a way, it\u2019s hardly surprising that cost savings and vendor lock-in are two main factors that drive the adoption of open-source database software, according to a 2020 study by Percona.</p><p>This blog post will explore the meaning and implications of vendor lock-in when adopting database software.</p><h2 id="how-to-keep-control-of-your-data-and-infrastructure" tabindex="-1">How to Keep Control of Your Data and Infrastructure <a class="header-anchor" href="#how-to-keep-control-of-your-data-and-infrastructure" aria-hidden="true">#</a></h2><p>According to Wikipedia, \u201Cvendor lock-in, also known as proprietary lock-in or customer lock-in, makes a customer dependent on a vendor for products, unable to use another vendor without substantial switching costs.\u201D</p><p>Vendor lock-in makes you dependent on a single vendor or technology without an easy way to migrate or switch to new software in the future without incurring significant financial implications, legal constraints, integration, or compatibility issues.</p><p>In its place, companies can enjoy all the benefits that their license covers, including maintenance, regular updates, hosting options, etc.</p>',8);function l(d,p,u,h,f,w){const e=t("Footer");return a(),n("div",null,[c,r(e)])}const g=o(s,[["render",l]]);export{m as __pageData,g as default};
